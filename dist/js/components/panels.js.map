{"version":3,"sources":["../../../src/js/components/panels.jsx"],"names":["Panels","panels","props","store","map","panel","i","removePanel","getPanels","Component","Panel","currTab","generalTabClass","stylesTabClass","e","onDelete","id","selectTab","getTab","draw","isDrawing","updateCanvasSize","innerRadiusInPixels","outerRadiusInPixels","maxLoops","lineThickness","lineColor","lineTransparency","speed","innerCircleSizePercentage","pointFromCenterPercentage","GeneralTab","setInnerCircleSizePercentage","target","value","setPointFromCenterPercentage","setSpeed","StylesTab","lineColorHex","backgroundColor"],"mappings":"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","file":"panels.js","sourcesContent":["import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport Spirograph from './spirograph';\r\n\r\n\r\n@observer\r\nclass Panels extends React.Component {\r\n    getPanels () {\r\n        const { panels } = this.props.store;\r\n\r\n        return _.map(panels, (panel, i) => {\r\n            return (\r\n                <Panel\r\n                    key={i}\r\n                    onDelete={this.props.store.removePanel}\r\n                    panel={panel}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <section>\r\n                <ol id=\"spirographs\">\r\n                    {this.getPanels()}\r\n                </ol>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass Panel extends React.Component {\r\n\r\n    getTab () {\r\n        if (this.props.panel.currTab === 'general') {\r\n            return <GeneralTab {...this.props} />;\r\n        } else {\r\n            return <StylesTab {...this.props} />;\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const panel = this.props.panel;\r\n        const generalTabClass = (panel.currTab === 'general') ? 'selected' : '';\r\n        const stylesTabClass = (panel.currTab === 'styles') ? 'selected' : '';\r\n\r\n        return (\r\n            <li>\r\n                <div className=\"spiro-tabs\">\r\n                    <div className=\"spiro-controls\">\r\n                        <a href=\"#\" className=\"destroy\" title=\"Close this panel\" onClick={(e) => this.props.onDelete(panel.id)}>x</a>\r\n                    </div>\r\n                    <ol>\r\n                        <li className={generalTabClass}><a href=\"#\" onClick={(e) => panel.selectTab('general')}>General</a></li>\r\n                        <li className={stylesTabClass}><a href=\"#\" onClick={(e) => panel.selectTab('styles')}>Styles</a></li>\r\n                    </ol>\r\n                </div>\r\n\r\n                <section className=\"tabContent\">\r\n                    <div className=\"well\">\r\n                        {this.getTab()}\r\n                    </div>\r\n                </section>\r\n\r\n                <div className=\"well well-small\">\r\n                    <span className=\"spinner\" />\r\n                    <button className=\"btn-small btn-primary actionButton\" onClick={(e) => panel.draw()}>Draw &raquo;</button>\r\n                </div>\r\n\r\n                <div className=\"canvasWrapper\">\r\n                    <Spirograph\r\n                        isDrawing={panel.isDrawing}\r\n                        updateCanvasSize={panel.updateCanvasSize}\r\n                        innerRadiusInPixels={panel.innerRadiusInPixels}\r\n                        outerRadiusInPixels={panel.outerRadiusInPixels}\r\n                        maxLoops={panel.maxLoops}\r\n                        lineThickness={panel.lineThickness}\r\n                        lineColor={panel.lineColor}\r\n                        lineTransparency={panel.lineTransparency}\r\n                        speed={panel.speed}\r\n                        innerCircleSizePercentage={panel.innerCircleSizePercentage}\r\n                        pointFromCenterPercentage={panel.pointFromCenterPercentage}\r\n                    />\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n@observer\r\nclass GeneralTab extends React.Component {\r\n    render () {\r\n        const panel = this.props.panel;\r\n        const { id, innerCircleSizePercentage, pointFromCenterPercentage, speed } = panel;\r\n\r\n        return (\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td><label htmlFor={`innerCircleSizePercentage${id}`}>Inner Circle Size</label></td>\r\n                        <td>\r\n                            <input type=\"range\" className=\"innerCircleSizePercentage\" id={`innerCircleSizePercentage${id}`}\r\n                                value={innerCircleSizePercentage} min=\"1\" max=\"99\" onChange={(e) => { panel.setInnerCircleSizePercentage(e.target.value)} } />\r\n                            <ol className=\"rangeTip\">\r\n                                <li className=\"rangeTipLeft\">Small</li>\r\n                                <li className=\"rangeTipRight\">Large</li>\r\n                            </ol>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><label htmlFor={`pointFromCenterPercentage${id}`}>Point from Center</label></td>\r\n                        <td>\r\n                            <input type=\"range\" className=\"pointFromCenterPercentage\" id={`pointFromCenterPercentage${id}`}\r\n                                value={pointFromCenterPercentage} min=\"1\" max=\"99\" onChange={(e) => { panel.setPointFromCenterPercentage(e.target.value)} } />\r\n                            <ol className=\"rangeTip\">\r\n                                <li className=\"rangeTipLeft\">Small</li>\r\n                                <li className=\"rangeTipRight\">Large</li>\r\n                            </ol>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><label htmlFor={`speed${id}`}>Speed</label></td>\r\n                        <td>\r\n                            <input type=\"range\" className=\"speed\" id={`speed${id}`} value={speed} min=\"10\" max=\"300\"\r\n                                onChange={(e) => { panel.setSpeed(e.target.value)} } />\r\n                            <ol className=\"rangeTip\">\r\n                                <li className=\"rangeTipLeft\">Slow</li>\r\n                                <li className=\"rangeTipRight\">Fast</li>\r\n                            </ol>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\n@observer\r\nclass StylesTab extends React.Component {\r\n    render () {\r\n        const { id, lineThickness, lineTransparency, lineColorHex } = this.props.panel;\r\n\r\n        return (\r\n            <table className=\"table\">\r\n                <tbody>\r\n                <tr>\r\n                    <td><label htmlFor=\"lineThickness<%= cid %>\">Line Thickness</label></td>\r\n                    <td>\r\n                        <input type=\"range\" className=\"lineThickness\" id={`lineThickness${id}`} value={lineThickness}\r\n                            min=\"1\" step=\"1\" max=\"10\" />\r\n                        <ol className=\"rangeTip\">\r\n                            <li className=\"rangeTipLeft\">Thin</li>\r\n                            <li className=\"rangeTipRight\">Thick</li>\r\n                        </ol>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td><label htmlFor={`lineTransparency${id}`}>Line Transparency</label></td>\r\n                    <td>\r\n                        <input type=\"range\" className=\"lineTransparency\" id={`lineTransparency${id}`} value={lineTransparency}\r\n                            min=\"0.01\" step=\"0.01\" max=\"1\" />\r\n                        <ol className=\"rangeTip\">\r\n                            <li className=\"rangeTipLeft\">Transparent</li>\r\n                            <li className=\"rangeTipRight\">Solid</li>\r\n                        </ol>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td><label htmlFor={`lineColour${id}`}>Line Colour</label></td>\r\n                    <td>\r\n                        <div className=\"cpicker input-append color\" data-color={lineColorHex} data-color-format=\"hex\" id={`lineColour${id}`}>\r\n                            <input type=\"text\" className=\"span2\" value={lineColorHex} />\r\n                            <span className=\"add-on\"><i style={{ backgroundColor: lineColorHex }} /></span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Panels;\r\n"]}