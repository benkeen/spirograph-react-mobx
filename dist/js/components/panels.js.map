{"version":3,"sources":["../../../src/js/components/panels.jsx"],"names":["Panels","panels","props","store","map","panel","i","removePanel","getPanels","Component","Panel","currTab","generalTabClass","stylesTabClass","e","onDelete","id","selectTab","getTab","draw","isDrawing","updateCanvasSize","innerRadiusInPixels","outerRadiusInPixels","maxLoops","lineThickness","lineColor","lineTransparency","speed","innerCircleSizePercentage","pointFromCenterInPixels","GeneralTab","pointFromCenterPercentage","setInnerCircleSizePercentage","target","value","setPointFromCenterPercentage","setSpeed","StylesTab","lineColorHex","backgroundColor"],"mappings":"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","file":"panels.js","sourcesContent":["import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport Spirograph from './spirograph';\r\n\r\n\r\n@observer\r\nclass Panels extends React.Component {\r\n\tgetPanels () {\r\n\t\tconst { panels } = this.props.store;\r\n\r\n\t\treturn _.map(panels, (panel, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Panel\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tonDelete={this.props.store.removePanel}\r\n\t\t\t\t\tpanel={panel}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<section>\r\n\t\t\t\t<ol id=\"spirographs\">\r\n\t\t\t\t\t{this.getPanels()}\r\n\t\t\t\t</ol>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n@observer\r\nclass Panel extends React.Component {\r\n\r\n\tgetTab () {\r\n\t\tif (this.props.panel.currTab === 'general') {\r\n\t\t\treturn <GeneralTab {...this.props} />;\r\n\t\t} else {\r\n\t\t\treturn <StylesTab {...this.props} />;\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\tconst panel = this.props.panel;\r\n\t\tconst generalTabClass = (panel.currTab === 'general') ? 'selected' : '';\r\n\t\tconst stylesTabClass = (panel.currTab === 'styles') ? 'selected' : '';\r\n\r\n\t\treturn (\r\n\t\t\t<li>\r\n\t\t\t\t<div className=\"spiro-tabs\">\r\n\t\t\t\t\t<div className=\"spiro-controls\">\r\n\t\t\t\t\t\t<a href=\"#\" className=\"destroy\" title=\"Close this panel\" onClick={(e) => this.props.onDelete(panel.id)}>x</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t<li className={generalTabClass}><a href=\"#\" onClick={(e) => panel.selectTab('general')}>General</a></li>\r\n\t\t\t\t\t\t<li className={stylesTabClass}><a href=\"#\" onClick={(e) => panel.selectTab('styles')}>Styles</a></li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<section className=\"tabContent\">\r\n\t\t\t\t\t<div className=\"well\">\r\n\t\t\t\t\t\t{this.getTab()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<div className=\"well well-small\">\r\n\t\t\t\t\t<span className=\"spinner\" />\r\n\t\t\t\t\t<button className=\"btn-small btn-primary actionButton\" onClick={(e) => panel.draw()}>Draw &raquo;</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"canvasWrapper\">\r\n\t\t\t\t\t<Spirograph\r\n\t\t\t\t\t\tisDrawing={panel.isDrawing}\r\n\t\t\t\t\t\tupdateCanvasSize={panel.updateCanvasSize}\r\n\t\t\t\t\t\tinnerRadiusInPixels={panel.innerRadiusInPixels}\r\n\t\t\t\t\t\touterRadiusInPixels={panel.outerRadiusInPixels}\r\n\t\t\t\t\t\tmaxLoops={panel.maxLoops}\r\n\t\t\t\t\t\tlineThickness={panel.lineThickness}\r\n\t\t\t\t\t\tlineColor={panel.lineColor}\r\n\t\t\t\t\t\tlineTransparency={panel.lineTransparency}\r\n\t\t\t\t\t\tspeed={panel.speed}\r\n\t\t\t\t\t\tinnerCircleSizePercentage={panel.innerCircleSizePercentage}\r\n\t\t\t\t\t\tpointFromCenterInPixels={panel.pointFromCenterInPixels}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n@observer\r\nclass GeneralTab extends React.Component {\r\n\trender () {\r\n\t\tconst panel = this.props.panel;\r\n\t\tconst { id, innerCircleSizePercentage, pointFromCenterPercentage, speed } = panel;\r\n\r\n\t\treturn (\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td><label htmlFor={`innerCircleSizePercentage${id}`}>Inner Circle Size</label></td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input type=\"range\" className=\"innerCircleSizePercentage\" id={`innerCircleSizePercentage${id}`}\r\n\t\t\t\t\t\t\t\tvalue={innerCircleSizePercentage} min=\"1\" max=\"99\" onChange={(e) => { panel.setInnerCircleSizePercentage(e.target.value)} } />\r\n\t\t\t\t\t\t\t<ol className=\"rangeTip\">\r\n\t\t\t\t\t\t\t\t<li className=\"rangeTipLeft\">Small</li>\r\n\t\t\t\t\t\t\t\t<li className=\"rangeTipRight\">Large</li>\r\n\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td><label htmlFor={`pointFromCenterPercentage${id}`}>Point from Center</label></td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input type=\"range\" className=\"pointFromCenterPercentage\" id={`pointFromCenterPercentage${id}`}\r\n\t\t\t\t\t\t\t\tvalue={pointFromCenterPercentage} min=\"1\" max=\"99\" onChange={(e) => { panel.setPointFromCenterPercentage(e.target.value)} } />\r\n\t\t\t\t\t\t\t<ol className=\"rangeTip\">\r\n\t\t\t\t\t\t\t\t<li className=\"rangeTipLeft\">Small</li>\r\n\t\t\t\t\t\t\t\t<li className=\"rangeTipRight\">Large</li>\r\n\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td><label htmlFor={`speed${id}`}>Speed</label></td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input type=\"range\" className=\"speed\" id={`speed${id}`} value={speed} min=\"10\" max=\"300\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => { panel.setSpeed(e.target.value)} } />\r\n\t\t\t\t\t\t\t<ol className=\"rangeTip\">\r\n\t\t\t\t\t\t\t\t<li className=\"rangeTipLeft\">Slow</li>\r\n\t\t\t\t\t\t\t\t<li className=\"rangeTipRight\">Fast</li>\r\n\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n@observer\r\nclass StylesTab extends React.Component {\r\n\trender () {\r\n\t\tconst { id, lineThickness, lineTransparency, lineColorHex } = this.props.panel;\r\n\r\n\t\treturn (\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td><label htmlFor=\"lineThickness<%= cid %>\">Line Thickness</label></td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"range\" className=\"lineThickness\" id={`lineThickness${id}`} value={lineThickness}\r\n\t\t\t\t\t\t\tmin=\"1\" step=\"1\" max=\"10\" />\r\n\t\t\t\t\t\t<ol className=\"rangeTip\">\r\n\t\t\t\t\t\t\t<li className=\"rangeTipLeft\">Thin</li>\r\n\t\t\t\t\t\t\t<li className=\"rangeTipRight\">Thick</li>\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td><label htmlFor={`lineTransparency${id}`}>Line Transparency</label></td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"range\" className=\"lineTransparency\" id={`lineTransparency${id}`} value={lineTransparency}\r\n\t\t\t\t\t\t\tmin=\"0.01\" step=\"0.01\" max=\"1\" />\r\n\t\t\t\t\t\t<ol className=\"rangeTip\">\r\n\t\t\t\t\t\t\t<li className=\"rangeTipLeft\">Transparent</li>\r\n\t\t\t\t\t\t\t<li className=\"rangeTipRight\">Solid</li>\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td><label htmlFor={`lineColour${id}`}>Line Colour</label></td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<div className=\"cpicker input-append color\" data-color={lineColorHex} data-color-format=\"hex\" id={`lineColour${id}`}>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"span2\" value={lineColorHex} />\r\n\t\t\t\t\t\t\t<span className=\"add-on\"><i style={{ backgroundColor: lineColorHex }} /></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Panels;\r\n"]}