{"version":3,"sources":["../../src/js/stores.jsx"],"names":["UIStateStore","window","resize","updateWindowDimensions","params","panels","push","panelID","console","log"],"mappings":";;;;;;;;;;AAAA;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,qBAAU,IAAV;;AAGA;IACMA,Y;;AAGF;AACA,4BAAc;AAAA;;AAAA;;AAAA;;AACV,8BAAEC,MAAF,EAAUC,MAAV,CAAiB,YAAM;AACnB,kBAAKC,sBAAL;AACH,SAFD;AAGH;;;;iCAEiBC,M,EAAQ;AACtB,iBAAKC,MAAL,CAAYC,IAAZ,CAAiB,oBAAU,IAAV,EAAgBF,MAAhB,CAAjB;AACH;;;oCAEoBG,O,EAAS;AAC1BC,oBAAQC,GAAR,CAAYF,OAAZ;AACA;AACH;;AAED;;;;kCACmB,CAElB;;;;;;;eArBoB,E;;;;AAwBzB;;kBACe,IAAIP,YAAJ,E","file":"stores.js","sourcesContent":["import { observable, action, computed, useStrict } from 'mobx';\r\nimport $ from 'jquery';\r\nimport Panel from './panel';\r\n\r\n\r\nuseStrict(true);\r\n\r\n\r\n// One Store To Rule Them All.\r\nclass UIStateStore {\r\n    @observable panels = [];\r\n\r\n    // a lot of the computation of the spirographs need to know the height\r\n    constructor() {\r\n        $(window).resize(() => {\r\n            this.updateWindowDimensions();\r\n        });\r\n    }\r\n\r\n    @action addPanel (params) {\r\n        this.panels.push(new Panel(this, params));\r\n    }\r\n\r\n    @action removePanel (panelID) {\r\n        console.log(panelID);\r\n        //this.panels.splice(this.panels.indexOf(panel), 1);\r\n    }\r\n\r\n    // this'll presumably call an action on all panels?\r\n    @action drawAll () {\r\n\r\n    }\r\n}\r\n\r\n// exports a singleton store\r\nexport default new UIStateStore();\r\n"]}